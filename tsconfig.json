{
  "compilerOptions": {
    "target": "es2015" // Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES201
    // "noUnusedLocals": true,
    // "noUnusedParameters": true,
    // // Enables strict type-checking options
    // "strict": true,
    // // Enable all strict type-checking options
    // "strictNullChecks": true, // When type is null or undefined, TypeScript will throw an error
    // "strictFunctionTypes": true, // Ensure function parameter and return type correctness
    // "strictBindCallApply": true, // Ensure correct types for this in functions, and arguments in call, bind, and apply
    // "strictPropertyInitialization": true, // Ensure all properties of a class are initialized in the constructor
    // "noImplicitAny": true, // Raise error on expressions and declarations with an implied 'any' type
    // "noImplicitThis": true, // Raise error on 'this' expressions with an implied 'any' type
    // "alwaysStrict": true, // Parse in strict mode and emit "use strict" for each source file
    // // Additional checks
    // "noImplicitReturns": true, // Report error when not all code paths in function return a value
    // "noFallthroughCasesInSwitch": true, // Report errors for fallthrough cases in switch statement
    // // Improve module resolution and output
    // "moduleResolution": "node", // Choose a module resolution strategy: 'node' for Node.js/io.js style resolution
    // "baseUrl": "./", // Base directory to resolve non-relative module names
    // "paths": {
    //   // Specify paths mapping to be computed relative to baseUrl option
    //   "*": ["node_modules/*", "src/types/*"]
    // },
    // "esModuleInterop": true, // Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports
    // "forceConsistentCasingInFileNames": true // Disallow inconsistently-cased references to the same file
    // other compiler options...
  },
  "include": ["options/**/*", "popup/**/*", "scripts/**/*"]
}
